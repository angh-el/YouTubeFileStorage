from moviepy.editor import *
import numpy as np
import string


class VideoConverter:
    def __init__(self, text, output_file):
        self.text = list(text)
        self.output_file = output_file

        self.char_to_colour_map = {
            ' ': (255, 255, 255),
            '0': (255, 0, 0),
            '1': (255, 15, 0),
            '2': (255, 30, 0),
            '3': (255, 45, 0),
            '4': (255, 61, 0),
            '5': (255, 76, 0),
            '6': (255, 91, 0),
            '7': (255, 107, 0),
            '8': (255, 122, 0),
            '9': (255, 137, 0),
            'a': (255, 153, 0),
            'b': (255, 168, 0),
            'c': (255, 183, 0),
            'd': (255, 198, 0),
            'e': (255, 214, 0),
            'f': (255, 229, 0),
            'g': (255, 244, 0),
            'h': (249, 255, 0),
            'i': (234, 255, 0),
            'j': (219, 255, 0),
            'k': (203, 255, 0),
            'l': (188, 255, 0),
            'm': (173, 255, 0),
            'n': (158, 255, 0),
            'o': (142, 255, 0),
            'p': (127, 255, 0),
            'q': (112, 255, 0),
            'r': (96, 255, 0),
            's': (81, 255, 0),
            't': (66, 255, 0),
            'u': (50, 255, 0),
            'v': (35, 255, 0),
            'w': (20, 255, 0),
            'x': (5, 255, 0),
            'y': (0, 255, 10),
            'z': (0, 255, 25),
            'A': (0, 255, 40),
            'B': (0, 255, 56),
            'C': (0, 255, 71),
            'D': (0, 255, 86),
            'E': (0, 255, 102),
            'F': (0, 255, 117),
            'G': (0, 255, 132),
            'H': (0, 255, 147),
            'I': (0, 255, 163),
            'J': (0, 255, 178),
            'K': (0, 255, 193),
            'L': (0, 255, 209),
            'M': (0, 255, 224),
            'N': (0, 255, 239),
            'O': (0, 254, 255),
            'P': (0, 239, 255),
            'Q': (0, 224, 255),
            'R': (0, 209, 255),
            'S': (0, 193, 255),
            'T': (0, 178, 255),
            'U': (0, 163, 255),
            'V': (0, 147, 255),
            'W': (0, 132, 255),
            'X': (0, 117, 255),
            'Y': (0, 101, 255),
            'Z': (0, 86, 255),
            '!': (0, 71, 255),
            '"': (0, 56, 255),
            '#': (0, 40, 255),
            '$': (0, 25, 255),
            '%': (0, 10, 255),
            '&': (5, 0, 255),
            "'": (20, 0, 255),
            '(': (35, 0, 255),
            ')': (50, 0, 255),
            '*': (66, 0, 255),
            '+': (81, 0, 255),
            ',': (96, 0, 255),
            '-': (112, 0, 255),
            '.': (127, 0, 255),
            '/': (142, 0, 255),
            ':': (158, 0, 255),
            ';': (173, 0, 255),
            '<': (188, 0, 255),
            '=': (203, 0, 255),
            '>': (219, 0, 255),
            '?': (234, 0, 255),
            '@': (249, 0, 255),
            '[': (255, 0, 244),
            '\\': (255, 0, 229),
            ']': (255, 0, 214),
            '^': (255, 0, 198),
            '_': (255, 0, 183),
            '`': (255, 0, 168),
            '{': (255, 0, 152),
            '|': (255, 0, 137),
            '}': (255, 0, 122),
            '~': (255, 0, 107),
            
        }

    def char_to_color(self, char):
        return self.char_to_colour_map.get(char, (0, 0, 0))


    def create_colored_frames(self):
        frames = []
        clip_parts = []  
        clip_width = 640 // 10  

        for i, char in enumerate(self.text):
            color = self.char_to_color(char)
            clip_part = ColorClip(size=(clip_width, 360), color=color).set_duration(0.1)
            clip_parts.append(clip_part)

            if len(clip_parts) == 10 or i == len(self.text) - 1:
                row_clip = clips_array([clip_parts])
                frames.append(row_clip)
                clip_parts = []

        final_clip = concatenate_videoclips(frames, method="compose")
        final_clip.fps = 30
        final_clip.write_videofile(self.output_file, codec="libx264", fps=30, audio=False, preset='ultrafast')
